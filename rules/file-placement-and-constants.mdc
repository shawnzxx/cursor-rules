---
description: 
globs: 
alwaysApply: false
---
# File Placement & Configuration Guidelines

This rule outlines where to place specific types of code and configuration.

## Layer-Specific File Placement

-   **API Layer Logic (Controllers)**: Handlers and related API components go in:
    `[api/internal/api/domain/](mdc:api/internal/api/domain)`
-   **App Layer Logic (Use Cases)**: Orchestration logic, use case implementations go in:
    `[api/internal/app/domain/](mdc:api/internal/app/domain)`
-   **System-Wide Utilities**: Common functions shared across the application go in:
    `[api/system/](mdc:api/system)` (e.g., `[idgenerator/](mdc:api/system/idgenerator)`, `[timeutil/](mdc:api/system/timeutil)`, `[validator/](mdc:api/system/validator)`)

## Dependency Initialization

-   Initialization functions for dependencies used by root executable packages (`[api/cmd/](mdc:api/cmd)`) should be placed in:
    `[api/cmd/internal/components/](mdc:api/cmd/internal/components)`

## ORM Layer

-   The Object-Relational Mapping (ORM) code, generated by SQLBoiler and potentially containing custom repository logic built upon it, resides in:
    `[api/internal/repository/orm/](mdc:api/internal/repository/orm)`
-   Direct interaction with the ORM layer typically happens within the `repository` layer implementation.

## Constants and Configuration

-   **Application-Wide Constants**: Shared constants used across different layers should be defined in:
    `[api/internal/constant/](mdc:api/internal/constant)` (e.g., `[metakey/](mdc:api/internal/constant/metakey)`, `[topic/](mdc:api/internal/constant/topic)`)
-   **Local Development Configuration**: Environment variables and settings for local development are found in:
    `[api/local.env](mdc:api/local.env)`
